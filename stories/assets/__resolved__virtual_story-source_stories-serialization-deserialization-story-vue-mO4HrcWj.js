const __resolved__virtual_storySource_storiesSerializationDeserializationStoryVue = '<template>\n  <Story title="serialization/deserialization">\n    <div>\n      <diagram :model="model"></diagram>\n      <button @click="console.log(model.serialize())">serialize</button>\n      <button @click="model.deserialize(serializedModel)">deserialize</button>\n    </div>\n  </Story>\n</template>\n<script>\nimport Diagram from "../src/components/Diagram.vue";\n\nexport default {\n  components: {\n    Diagram,\n  },\n  data() {\n    const diagramModel = new Diagram.Model();\n\n    const node1 = diagramModel.addNode("test2", 300, 200);\n    const inPort = node1.addInPort("test");\n\n    const node2 = diagramModel.addNode("test", 10, 300, 144, 80);\n    const node2OutPort = node2.addOutPort("testOut");\n    node2.addOutPort("testOut2");\n    node2.color = "#00cc66";\n\n    const node3 = diagramModel.addNode("test3", 10, 100, 72, 100);\n    const node3OutPort = node3.addOutPort("testOut3");\n    node3.color = "#cc6600";\n\n    diagramModel.addLink(node2OutPort, inPort);\n    diagramModel.addLink(node3OutPort, inPort);\n\n    return {\n      console,\n      serializedModel: diagramModel.serialize(),\n      model: diagramModel\n    };\n  },\n};\n<\/script>\n';
export {
  __resolved__virtual_storySource_storiesSerializationDeserializationStoryVue as default
};
